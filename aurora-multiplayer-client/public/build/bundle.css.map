{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Loader.svelte",
    "..\\..\\header.svelte"
  ],
  "sourcesContent": [
    "<script>\n\texport let name;\n\tvar path = require('path')\n\tvar multiplayer = require(path.resolve(__dirname, \"../src/multiplayer\"))\n\tconst { dialog } = require('electron').remote\n\n\timport {Button, Form, FormGroup, Label, Input} from \"sveltestrap\"\n\timport Header from \"./header.svelte\"\n\timport Loader from './Loader.svelte'\n\n\tlet screen = \"home\"\n\tlet numNewGameUsers = 1\n\tlet newGameUsers = []\n\n\tlet gameName = \"\"\n\tlet gameData\n\tlet loading = false\n\tlet spinnerText = \"\"\n\tlet currentUsername = \"\"\n\tlet currentTurn = \"\"\n\tlet shortestWarp = \"\"\n\tlet isUsersTurn = false\n\tlet warpType\n\tlet warpTypeNum\n\tlet warpLength\n\t//Changes the page to the \"New Game\" page\n\tfunction newGamePage() {\n\t\tscreen = \"new game\"\n\t}\n\t//Changes the page to the \"Continue Game\" page\n\tfunction continueGamePage() {\n\t\tscreen = \"continue game\"\n\t}\n\n\t//Changes the page to the \"Download Game\" page\n\tfunction downloadGamePage() {\n\t\tscreen = \"download game\"\n\t}\n\n\t//Increments the number of users while creating a new game\n\tfunction incrementUsers() {\n\t\tnumNewGameUsers ++\n\t}\n\n\t//Decrements the number of users while creating a new game\n\tfunction decrementUsers() {\n\t\tnumNewGameUsers --\n\t}\n\n\t//Just flips isUsersTurn() so it can be used as a flag for disabling buttons\n\tfunction isNotAbleToSubmitTurn() {\n\t\tconsole.log(isUsersTurn())\n\t\treturn !isUsersTurn()\n\t}\n\n\t//Uploads the db and game json file to S3\n\tasync function uploadGame() {\n\t\tloading = true\n\t\tspinnerText = \"Creating Game...\"\n\t\tconsole.log(`Users: ${newGameUsers}`)\n\t\tlet success = await multiplayer.uploadGame(gameName, newGameUsers)\n\t\tconsole.log(success)\n\t\tif(success) {\n\t\t\tloading = false\n\t\t\tdialog.showMessageBox(null, {\n        type: \"info\",\n        buttons: [\"OK\"],\n        title: \"Success!\",\n        message: \"Successfully uploaded db file\"\n\t\t\t})\n\t\t\tscreen = \"home\"\n\t\t}\n\t}\n\n\t//Downloads the db and json file from S3 and makes sure that the user is in the game\n\tasync function pullGame() {\n\t\tlet inGame = true\n\t\tisUsersTurn = true\n\t\tloading = true\n\t\tspinnerText = \"Downloading db...\"\n\t\tlet gameData = await multiplayer.getConfig(gameName)\n\t\tawait multiplayer.pullGame(gameName, currentUsername)\n\t\t.catch(err => {\n\t\t\t//We don't need to error out here if the user is in the game, but it is not their turn\n\t\t\tif(err != \"Not your turn\") {\n\t\t\t\tdialog.showMessageBox(null, {\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\tbuttons: [\"OK\"],\n\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\tmessage: err\n\t\t\t\t})\n\t\t\t\tinGame = false\n\t\t\t} else {\n\t\t\t\tisUsersTurn = false\n\t\t\t}\n\t\t})\n\t\tloading = false\n\t\tif(gameData && inGame) {\n\t\t\tscreen = \"play turn\"\n\t\t\tgameName = gameData.gameName\n\t\t\tcurrentTurn = gameData.currentTurn\n\n\t\t\tlet shortestType = 10\n\n\t\t\t//Gotta make sure that each vote is smaller than the starting value\n\t\t\tlet shortestWarpSecs = Number.MAX_VALUE\n\t\t\tlet warpType = \"\"\n\t\t\tlet length = 0\n\n\t\t\tconsole.log(gameData.warpVotes)\n\t\t\tfor(let vote of gameData.warpVotes) {\n\t\t\t\tlet warpSeconds = 0\n\n\t\t\t\t//Convert the vote into seconds so it can be compared\n\t\t\t\tswitch(vote.type) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\twarpSeconds = vote.length\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\twarpSeconds = vote.length * 60\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\twarpSeconds = vote.length * 3600\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\twarpSeconds = vote.length * 86400\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\twarpSeconds = vote.length * 604800\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\twarpSeconds = vote.length * 2592000\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\twarpSeconds = vote.length * 31556926\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\n\t\t\t\tif(warpSeconds < shortestWarpSecs) {\n\t\t\t\t\tconsole.log(warpSeconds)\n\t\t\t\t\tshortestWarpSecs = warpSeconds\n\t\t\t\t\tlength = vote.length\n\t\t\t\t\tshortestType = vote.type\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twarpTypeNum = shortestType\n\t\t\tswitch(shortestType) {\n\t\t\t\tcase 1:\n\t\t\t\t\twarpType = \"Seconds\"\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\twarpType = \"Minutes\"\n\t\t\t\t\tbreak\n\t\t\t\tcase 3:\n\t\t\t\t\twarpType = \"Hours\"\n\t\t\t\t\tbreak\n\t\t\t\tcase 4:\n\t\t\t\t\twarpType = \"Days\"\n\t\t\t\t\tbreak\n\t\t\t\tcase 5:\n\t\t\t\t\twarpType = \"Weeks\"\n\t\t\t\t\tbrea\n\t\t\t\tcase 6:\n\t\t\t\t\twarpType = \"Months\"\n\t\t\t\t\tbreak\n\t\t\t\tcase 7:\n\t\t\t\t\twarpType = \"Years\"\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t\tshortestWarp = length + \" \" + warpType\n\n\t\t\t//Check if it is the game creators turn\n\t\t\tif(isUsersTurn && gameData.currentTurn == gameData.users[0]) {\n\t\t\t\tdialog.showMessageBox(null, {\n\t\t\t\t\ttype: \"info\",\n\t\t\t\t\tbuttons: [\"OK\"],\n\t\t\t\t\ttitle: \"New round\",\n\t\t\t\t\tmessage: `New round, please warp forwards ${length} ${warpType} before making your turn`\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t//Downloads the db and json file from S3 and makes sure that the user is in the game\n\tasync function downloadGame() {\n\t\tloading = true\n\t\tspinnerText = \"Downloading db...\"\n\t\t//let gameData = await multiplayer.getConfig(gameName)\n\t\tawait multiplayer.downloadGame(gameName)\n\t\tloading = false\n\t}\n\n\tasync function submitTurn() {\n\t\tloading = true\n\t\tspinnerText = \"Uploading db...\"\n\t\tconsole.log(warpType)\n\t\tswitch(warpType) {\n\t\t\tcase \"seconds\":\n\t\t\t\twarpTypeNum = 1\n\t\t\t\tbreak\n\t\t\tcase \"minutes\":\n\t\t\t\twarpTypeNum = 2\n\t\t\t\tbreak\n\t\t\tcase \"hours\":\n\t\t\t\twarpTypeNum = 3\n\t\t\t\tbreak\n\t\t\tcase \"days\":\n\t\t\t\twarpTypeNum = 4\n\t\t\t\tbreak\n\t\t\tcase \"weeks\":\n\t\t\t\twarpTypeNum = 5\n\t\t\t\tbreak\n\t\t\tcase \"months\":\n\t\t\t\twarpTypeNum = 6\n\t\t\t\tbreak\n\t\t\tcase \"years\":\n\t\t\t\twarpTypeNum = 7\n\t\t\t\tbreak\n\t\t}\n\t\tlet nextPlayer = await multiplayer.submitTurn(gameName, currentUsername, {type: warpTypeNum, length: warpLength, madeBy: currentUsername})\n\t\tloading = false\n\t\tdialog.showMessageBox(null, {\n\t\t\ttype: \"info\",\n\t\t\tbuttons: [\"OK\"],\n\t\t\ttitle: \"Turn Complete\",\n\t\t\tmessage: `Turn complete! It is now ${nextPlayer}'s turn.`\n\t\t})\n\t\tscreen = \"home\"\n\t}\n\t\n</script>\n\n{#if screen == \"home\"}\n\t<main>\n\t\t<Header text=\"Aurora Multiplayer\"/>\n\t\t<div class=\"button-group\">\n\t\t\t<Button type=\"button\" color=\"primary\" on:click={newGamePage}>New Game</Button>\n\t\t\t<Button type=\"button\" color=\"secondary\" on:click={continueGamePage}>Continue Existing Game</Button>\n\t\t</div>\n\t</main>\n{/if}\n\n{#if screen == \"new game\"}\n\t<main>\n\t\t<Loader spinnerText={spinnerText} loading={loading}></Loader>\n\t\t<Header text=\"New Game\"/>\n\t\t<Form>\n\t\t\t<FormGroup>\n\t\t\t\t<Label>Game Name</Label>\n\t\t\t\t<Input id=\"gameNameInput\" bind:value = {gameName}/>\n\t\t\t</FormGroup>\n\t\t\t\n\t\t\t<FormGroup>\n\t\t\t\t<Label>Users to be added to game</Label>\n\t\t\t\t{#each Array(numNewGameUsers) as _, i}\n\t\t\t\t\t<Input placeholder=\"username\" bind:value={newGameUsers[i]}/>\n\t\t\t\t{/each}\n\t\t\t</FormGroup>\n\t\t\t<div class=\"button-group\">\n\t\t\t\t<Button color=\"primary\" type=\"button\" id=\"addUserBtn\" on:click={incrementUsers}>Add User</Button>\n\t\t\t\t<Button color=\"danger\" type=\"button\" id=\"addUserBtn\" on:click={decrementUsers}>Remove User</Button>\n\t\t\t</div>\n\t\t\t<div class=\"button-group-horizontal-center\">\n\t\t\t\t<Button color=\"success\" type=\"button\" on:click={uploadGame}>Create Game</Button>\n\t\t\t</div>\n\t\t</Form>\n\t</main>\n{/if}\n\n{#if screen == \"continue game\"}\n\t<main>\n\t\t<Loader spinnerText={spinnerText} loading={loading}></Loader>\n\t\t<Header text=\"Continue Game\"/>\n\t\t<Form>\n\t\t\t<FormGroup>\n\t\t\t\t<Label>Game Name</Label>\n\t\t\t\t<Input bind:value={gameName}/>\n\t\t\t</FormGroup>\n\t\t\t<FormGroup>\n\t\t\t\t<Label>Username</Label>\n\t\t\t\t<Input bind:value={currentUsername}/>\n\t\t\t</FormGroup>\n\t\t\t<div class=\"button-group-horizontal-center\">\n\t\t\t\t<Button type=\"button\" color=\"warning\" on:click={downloadGame}>Download Game Save</Button>\n\t\t\t\t<Button color=\"success\" type=\"button\" on:click={pullGame}>Continue</Button>\n\t\t\t</div>\n\t\t</Form>\n\t</main>\n{/if}\n\n{#if screen == \"play turn\"}\n\t<main>\n\t\t<Loader spinnerText={spinnerText} loading={loading}></Loader>\n\t\t<Header text=\"Play Turn\"/>\n\t\t<div class=\"horiz-table\">\n\t\t\t<div class=\"horiz-table-header\">\n\t\t\t\t<div class=\"table-header-cell\">Game Name</div>\n\t\t\t\t<div class=\"table-header-cell\">Current Turn</div>\n\t\t\t\t<div class=\"table-header-cell\">Next Warp Length</div>\n\t\t\t</div>\n\t\t\t<div class=\"horiz-table-col\">\n\t\t\t\t<div class=\"table-cell\">{gameName}</div>\n\t\t\t\t<div class=\"table-cell\">{currentTurn}</div>\n\t\t\t\t<div class=\"table-cell\">{shortestWarp}</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<Label style=\"margin-bottom:2px;margin-top:20px;\">How long would you like to warp?</Label>\n\t\t<div class=\"button-group-horizontal-center\" style=\"width:300px;margin-top:0;\">\n\t\t\t<Input type=\"text\" bind:value={warpLength}/>\n\t\t\t<Input type=\"select\" bind:value={warpType}>\n\t\t\t\t<option default>type</option>\n\t\t\t\t<option value=\"seconds\">Seconds</option>\n\t\t\t\t<option value=\"minutes\">Minutes</option>\n\t\t\t\t<option value=\"hours\">Hours</option>\n\t\t\t\t<option value=\"days\">Days</option>\n\t\t\t\t<option value=\"weeks\">Weeks</option>\n\t\t\t\t<option value=\"months\">Months</option>\n\t\t\t\t<option value=\"years\">Years</option>\n\t\t\t</Input>\n\t\t</div>\n\t\t<div class=\"button-group-horizontal-center\">\n\t\t\t<Button type=\"button\" color=\"success\" disabled={!isUsersTurn} on:click={submitTurn}>Submit Turn</Button>\n\t\t</div>\n\t</main>\n{/if}\n\n<style>\n\tmain {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t\tmin-height: 100%;\n\t\tcolor: white;\n\t\tbackground: #203A43;\n\t}\n\n\t.button-group {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: space-between;\n\t}\n\n\t.button-group-horizontal-center {\n\t\tmargin-top: 10px;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: center;\n\t\twidth: 100%;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t.horiz-table {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tborder-radius: 10px;\n\t\tbox-shadow: 3px 3px 5px rgba(0, 0, 0, 0.6);\n\t}\n\n\t.horiz-table-header {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\t.table-header-cell {\n\t\tbackground: #37a2c2;\n\t\tfont-size: 1.5em;\n\t\ttext-align: right;\n\t\tpadding: 7px;\n\t}\n\n\t.table-header-cell:nth-child(odd) {\n\t\tbackground: #48acca !important;\n\t}\n\n\t.table-header-cell:first-child {\n\t\tborder-top-left-radius: 10px;\n\t}\n\n\t.table-header-cell:last-child {\n\t\tborder-bottom-left-radius: 10px;\n\t}\n\n\t.horiz-table-col {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\t.table-cell {\n\t\tbackground: rgb(235, 235, 235);\n\t\tcolor: rgb(68, 68, 68);\n\t\tfont-size: 1.5em;\n\t\ttext-align: left;\n\t\tpadding: 7px;\n\t}\n\n\t.table-cell:nth-child(odd) {\n\t\tbackground: whitesmoke;\n\t}\n\n\t.table-cell:first-child {\n\t\tborder-top-right-radius: 10px;\n\t}\n\n\t.table-cell:last-child {\n\t\tborder-bottom-right-radius: 10px;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>\n",
    "<script>\n  import Spinner from '../node_modules/svelte-spinner'\n  export let spinnerText\n\texport let loading\n</script>\n\n{#if loading}\n  <div class=\"spinner-container\">\n    <Spinner size=\"100\" speed=\"750\" color=\"#ff6c52\" thickness=\"3\" gap=\"40\"></Spinner>\n    <p class=\"spinner-text\">{spinnerText}</p>\n  </div>\n{/if}\n\n<style>\n  .spinner-container {\n\t\tposition: absolute;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tbackground: rgba(0, 0, 0, 0.8);\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tz-index: 100;\n\t}\n\t.spinner-text {\n\t\tcolor: white;\n\t\tfont-size: 5vh;\n\t\tmargin: 5px;\n\t\tz-index: 101;\n\t}\n</style>",
    "<script>\n  export let text\n</script>\n\n<h1>{text}</h1>\n\n<style>\n  h1 {\n    position: absolute;\n    top: 10px;\n\t\tcolor: #3eb7db;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 3.5em;\n\t\tfont-weight: 100;\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "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"
}